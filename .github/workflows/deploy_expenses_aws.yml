name: Build and Push API for base expenses

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      CONTAINER_REGISTRY: 755140066489.dkr.ecr.us-east-1.amazonaws.com
      IMAGE_NAME: expensesapp

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }} --platform linux/amd64 -f Dockerfile .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_AWS }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY_AWS }}
          aws-region: ap-south-1

      - name: Tag Docker image
        run: |
          docker tag ${{ env.IMAGE_NAME }} ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker image
        run: |
          docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Deploy to VM
        uses: appleboy/ssh-action@master
        env:
            IMAGE_NAME: ${{ env.IMAGE_NAME }}
            CONTAINER_REGISTRY: ${{ env.CONTAINER_REGISTRY }}
        with:
            envs: IMAGE_NAME, CONTAINER_REGISTRY
            host: ${{ secrets.SSH_HOST_AWS }}
            username: ${{ secrets.SSH_USER_AWS }}
            key: ${{ secrets.SSH_PRIVATE_KEY_AWS }}
            script: |
              # Get the IDs of all running containers
              container_ids=$(docker ps -q)
  
              # Check if there are any running containers
              if [[ -n "$container_ids" ]]; then
                # Kill the running containers
                docker kill $container_ids
              fi

              aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $CONTAINER_REGISTRY
              docker pull $CONTAINER_REGISTRY/$IMAGE_NAME:latest
              docker run -d --restart unless-stopped --env-file .env -p 5000:5000 $CONTAINER_REGISTRY/$IMAGE_NAME:latest